# This is my "personal" vcsh lib file
lib =
    # First initial default value
    [ -z "$VCSH_UPSTREAM_HOST" ] && VCSH_UPSTREAM_HOST="github.com"
    [ -z "$VCSH_UPSTREAM_PATH" ] && VCSH_UPSTREAM_PATH="magne"
    check_vcsh_name () {
        [ -n "${VCSH_NAME}" ] || error "\$VCSH_NAME not set for $MR_REPO"
    }
    vcsh_git_clone () {
        check_vcsh_name
        if test -z "$GIT_PROTOCOL"; then
            GIT_PROTOCOL="git@"
            GIT_SEPARATOR=":"
        fi
        VCSH_GIT_CLONE_PATH="config:${VCSH_NAME}.git"
        if ! git ls-remote "$VCSH_GIT_CLONE_PATH" &> /dev/null; then
            VCSH_GIT_CLONE_PATH="${GIT_PROTOCOL}${VCSH_UPSTREAM_HOST}${GIT_SEPARATOR:-/}${VCSH_UPSTREAM_PATH}/${VCSH_NAME}.git"
        fi
        echo "vcsh clone \"${VCSH_GIT_CLONE_PATH}\" \"${VCSH_NAME}\""
        vcsh clone "${VCSH_GIT_CLONE_PATH}" "${VCSH_NAME}"
    }
    vcsh_git_update () {
        check_vcsh_name
        vcsh run "${VCSH_NAME}" git pull
    }
    vcsh_git_push () {
        check_vcsh_name
        vcsh run "${VCSH_NAME}" git push
    }
    vcsh_git_status () {
        check_vcsh_name
        vcsh run "${VCSH_NAME}" git status
    }
    vcsh_git_gc () {
        check_vcsh_name
        vcsh run "${VCSH_NAME}" git gc
    }
    vcsh_cfg_post_d () {
        check_vcsh_name
        dir=${HOME}/.cfg-post.d
        # Run .cfg-post.d/${MR_REPO}{,.*}
        for f in `find ${dir} -executable -type f -iregex '.*/${VCSH_NAME}\(\..+\)?'`; do
            echo "Running $f"
            "$f"
        done
    }

checkout = vcsh_git_clone
update = vcsh_git_update
push = vcsh_git_push
status = vcsh_git_status
gc = vcsh_git_gc
fixups = vcsh_cfg_post_d
order = 9
